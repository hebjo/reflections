When would you want to use a remote repository rather than keeping all your work
local?

    when you want to share the project or have easy access from everywhere

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    good question... maybe I donÂ´t want to pull until I finished something I am working on (fixing a bug, etc.)

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    forks: like a clone on GitHub -> "clone" existing repository from someone else on GitHub to your GitHub account
    clone: copy of repository -> clone existing repository from GitHub to your computer
    branch: totally different thing... just other version of a repository(?), e.g. a easy mode of a game

What is the benefit of having a copy of the last known state of the remote
stored locally?

    stupid question... answer from cbuckey-uda:
    If I am about to go without Internet access for a while, for example to work
    on a plane, I can update my local copy before I leave.  I can do this even
    if I'm not ready to merge those changes into my own branches yet.  Then if I
    want, I can perform the merge while offline, or I need to know what the
    remote version is at some point, I have an easy way to access it.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    ... google drive for example... GitHub is easier if you know what to do... but not everybody knows that

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    when you try something out (new feature etc.), when you collaborate and propose a change (others may work on other changes)
